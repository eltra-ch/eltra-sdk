<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EltraConnector</name>
    </assembly>
    <members>
        <member name="T:EltraConnector.Agent.AgentConnector">
            <summary>
            End-User Connector used by ELTRA IoT clients to communicate with Cloud Service
            </summary>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.CloudAdapter">
            <summary>
            Cloud adapter
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.Host">
            <summary>
            ELTRA Cloud IoT Service host name
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.Identity">
            <summary>
            Agent authorisation data 
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.Channel">
            <summary>
            Agent channel
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.ChannelStatus">
            <summary>
            Agent channel status
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.Status">
            <summary>
            Agent status
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.AgentConnector.Timeout">
            <summary>
            Timeout in seconds (channel timeout, connection timeout)
            </summary>
        </member>
        <member name="E:EltraConnector.Agent.AgentConnector.StatusChanged">
            <summary>
            Agent status changed
            </summary>
        </member>
        <member name="E:EltraConnector.Agent.AgentConnector.DeviceDetected">
            <summary>
            Device node detected
            </summary>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.Connect">
            <summary>
            Connect
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.Connect(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Connect
            </summary>
            <param name="deviceIdentity">UserIdentity</param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.Disconnect">
            <summary>
            Disconnect
            </summary>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SignIn(EltraCommon.Contracts.Users.UserIdentity,System.Boolean)">
            <summary>
            Sign in user
            </summary>
            <param name="identity">User identity</param>
            <param name="createAccount"></param>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SignOut">
            <summary>
            Sign out agent user
            </summary>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SignOff">
            <summary>
            Sign-off - removes the account.
            </summary>
            <returns>true of success</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SignUp(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Sign up agent user
            </summary>
            <param name="identity">UserIdentity</param>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.GetChannels">
            <summary>
            GetChannels - Get list of device nodes
            </summary>
            <returns>List of {EltraDevice}</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.BindChannels(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Bind agent channel with device node channel using device credentials
            </summary>
            <param name="identity">device credentials</param>
            <returns>{bool}</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.UnbindChannel(EltraCommon.Contracts.Channels.Channel)">
            <summary>
            Unbind bounded channel
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SearchParameter(EltraCommon.Contracts.Devices.EltraDevice,System.UInt16,System.Byte)">
            <summary>
            SearchParameter - search device parameter by index and subindex
            </summary>
            <param name="device">Eltra device instance</param>
            <param name="index">parameter index</param>
            <param name="subIndex">parameter subindex</param>
            <returns>{ParameterBase}</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.SearchParameter(EltraCommon.Contracts.Devices.EltraDevice,System.String)">
            <summary>
            SearchParameter - search device parameter by parameter uniqueId
            </summary>
            <param name="device">Eltra device instance</param>
            <param name="uniqueId">Parameter uniqueId</param>
            <returns>{ParameterBase}</returns>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.Dispose">
            <summary>
            Dispose agent instance
            </summary>
        </member>
        <member name="M:EltraConnector.Agent.AgentConnector.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:EltraConnector.Agent.Events.DeviceDetectedEventArgs">
            <summary>
            DeviceDetectedEventArgs - device detected event args
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.Events.DeviceDetectedEventArgs.Device">
            <summary>
            {EltraDeviceNode} device instance
            </summary>
        </member>
        <member name="T:EltraConnector.Agent.VirtualCommandSet">
            <summary>
            VirtualCommandSet class
            </summary>
        </member>
        <member name="M:EltraConnector.Agent.VirtualCommandSet.#ctor(EltraConnector.Agent.AgentConnector,EltraCommon.Contracts.Devices.EltraDevice)">
            <summary>
            VirtualCommandSet
            </summary>
            <param name="connector"></param>
            <param name="device"></param>
        </member>
        <member name="E:EltraConnector.Agent.VirtualCommandSet.DeviceStatusChanged">
            <summary>
            Device status changed
            </summary>
        </member>
        <member name="E:EltraConnector.Agent.VirtualCommandSet.DeviceChanged">
            <summary>
            Device changed
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.VirtualCommandSet.Connector">
            <summary>
            Agent connector instance
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.VirtualCommandSet.Device">
            <summary>
            Device
            </summary>
        </member>
        <member name="P:EltraConnector.Agent.VirtualCommandSet.DeviceStatus">
            <summary>
            Device status
            </summary>
        </member>
        <member name="T:EltraConnector.Interfaces.IAgentConnector">
            <summary>
            IAgentConnector - agent connector interface
            </summary>
        </member>
        <member name="P:EltraConnector.Interfaces.IAgentConnector.Host">
            <summary>
            ELTRA Cloud IoT Service host name
            </summary>
        </member>
        <member name="P:EltraConnector.Interfaces.IAgentConnector.Identity">
            <summary>
            Agent authorisation data 
            </summary>
        </member>
        <member name="P:EltraConnector.Interfaces.IAgentConnector.Channel">
            <summary>
            Channel created by agent
            </summary>
        </member>
        <member name="P:EltraConnector.Interfaces.IAgentConnector.Status">
            <summary>
            Agent status
            </summary>
        </member>
        <member name="P:EltraConnector.Interfaces.IAgentConnector.Timeout">
            <summary>
            Timeout in seconds (channel timeout, connection timeout)
            </summary>
        </member>
        <member name="E:EltraConnector.Interfaces.IAgentConnector.StatusChanged">
            <summary>
            Agent status changed
            </summary>
        </member>
        <member name="E:EltraConnector.Interfaces.IAgentConnector.DeviceDetected">
            <summary>
            Device node detected
            </summary>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.Connect">
            <summary>
            Connect to host
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.Connect(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Connect to host and bind agent channel with master device channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.Disconnect">
            <summary>
            Disconnect
            </summary>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.SignIn(EltraCommon.Contracts.Users.UserIdentity,System.Boolean)">
            <summary>
            Sign in user
            </summary>
            <param name="identity">User identity</param>
            <param name="createAccount"></param>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.SignOut">
            <summary>
            Sign out agent user
            </summary>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.SignOff">
            <summary>
            Sign-off - removes the account.
            </summary>
            <returns>true of success</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.SignUp(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Sign up agent user
            </summary>
            <param name="identity">UserIdentity</param>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.GetChannels">
            <summary>
            GetChannels - Get list of device nodes
            </summary>
            <returns>List of {EltraDevice}</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.BindChannels(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Bind agent channel with device node channel using device credentials
            </summary>
            <param name="identity">device credentials</param>
            <returns>{bool}</returns>
        </member>
        <member name="M:EltraConnector.Interfaces.IAgentConnector.Dispose">
            <summary>
            Dispose agent instance
            </summary>
        </member>
        <member name="T:EltraConnector.UserAgent.Definitions.AgentStatus">
            <summary>
            Agent status
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Starting">
            <summary>
            Starting
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Stopping">
            <summary>
            Stopping
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Stopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Bound">
            <summary>
            Bound
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Registered">
            <summary>
            Registered
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.SignedIn">
            <summary>
            SignedIn
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.SignedUp">
            <summary>
            SignedUp
            </summary>
        </member>
        <member name="F:EltraConnector.UserAgent.Definitions.AgentStatus.SignedOut">
            <summary>
            SignedOut
            </summary>
        </member>
        <member name="M:EltraConnector.UserAgent.DeviceAgent.IsParameterRegistered(System.String)">
            <summary>
            IsParameterRegistered
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.DeviceAgent.RegisterParameterUpdate(EltraCommon.Contracts.Devices.EltraDevice,System.String,EltraCommon.Contracts.Parameters.ParameterUpdatePriority,System.Boolean)">
            <summary>
            RegisterParameterUpdate
            </summary>
            <param name="device"></param>
            <param name="uniqueId"></param>
            <param name="priority"></param>
            <param name="waitForResult"></param>
        </member>
        <member name="M:EltraConnector.UserAgent.DeviceAgent.UnregisterParameterUpdate(EltraCommon.Contracts.Devices.EltraDevice,System.String,EltraCommon.Contracts.Parameters.ParameterUpdatePriority,System.Boolean)">
            <summary>
            UnregisterParameterUpdate
            </summary>
            <param name="device"></param>
            <param name="uniqueId"></param>
            <param name="priority"></param>
            <param name="waitForResult"></param>
        </member>
        <member name="M:EltraConnector.UserAgent.DeviceAgent.WriteParameter(EltraCommon.Contracts.Devices.EltraDevice,EltraCommon.ObjectDictionary.Common.DeviceDescription.Profiles.Application.Parameters.Parameter)">
            <summary>
            WriteParameter - Write parameter in cloud IoT service
            </summary>
            <param name="device">Eltra device instance</param>
            <param name="parameter">{Parameter} instance</param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.DeviceAgent.UpdateDeviceDescriptionFile(EltraCommon.Contracts.Devices.EltraDevice)">
            <summary>
            UpdateDeviceDescriptionFile
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="T:EltraConnector.UserAgent.Events.ExecuteCommanderEventArgs">
            <summary>
            ExecuteCommanderEventArgs
            </summary>
        </member>
        <member name="P:EltraConnector.UserAgent.Events.ExecuteCommanderEventArgs.CommandUuid">
            <summary>
            Command uuid
            </summary>
        </member>
        <member name="P:EltraConnector.UserAgent.Events.ExecuteCommanderEventArgs.Status">
            <summary>
            Command status
            </summary>
        </member>
        <member name="P:EltraConnector.UserAgent.Events.ExecuteCommanderEventArgs.Command">
            <summary>
            {DeviceCommand} instance
            </summary>
        </member>
        <member name="T:EltraConnector.UserAgent.Vcs.DeviceVcs">
            <summary>
            DeviceVcs class
            </summary>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.#ctor(System.String,System.String,EltraCommon.Contracts.Users.UserIdentity,System.UInt32,System.UInt32)">
            <summary>
            DeviceVcs
            </summary>
            <param name="url"></param>
            <param name="uuid"></param>
            <param name="identity"></param>
            <param name="updateInterval"></param>
            <param name="timeout"></param>
        </member>
        <member name="P:EltraConnector.UserAgent.Vcs.DeviceVcs.Device">
            <summary>
            Device node instance
            </summary>
        </member>
        <member name="P:EltraConnector.UserAgent.Vcs.DeviceVcs.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="E:EltraConnector.UserAgent.Vcs.DeviceVcs.DeviceChanged">
            <summary>
            Device changed event
            </summary>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.OnDeviceChanged">
            <summary>
            OnDeviceChanged
            </summary>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetVcsCommand(System.String)">
            <summary>
            GetVcsCommand - get vcs command
            </summary>
            <param name="commandName"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.UpdateParameterValue(System.String)">
            <summary>
            UpdateParameterValue
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.UpdateParameterValue(System.UInt16,System.Byte)">
            <summary>
            UpdateParameterValue
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameterValue(System.String)">
            <summary>
            GetParameterValue
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameterValue(System.UInt16,System.Byte)">
            <summary>
            GetParameterValue
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameter(System.String)">
            <summary>
            GetParameter
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameter(System.UInt16,System.Byte)">
            <summary>
            GetParameter
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameterValueHistory(System.String,System.DateTime,System.DateTime)">
            <summary>
            GetParameterValueHistory
            </summary>
            <param name="uniqueId"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameterValueHistoryStatistics(System.String,System.DateTime,System.DateTime)">
            <summary>
            GetParameterValueHistoryStatistics
            </summary>
            <param name="uniqueId"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetParameterValueHistory(System.UInt16,System.Byte,System.DateTime,System.DateTime)">
            <summary>
            GetParameterValueHistory
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.RegisterParameterUpdate(System.UInt16,System.Byte)">
            <summary>
            RegisterParameterUpdate
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.UnregisterParameterUpdate(System.UInt16,System.Byte)">
            <summary>
            UnregisterParameterUpdate
            </summary>
            <param name="index"></param>
            <param name="subIndex"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.GetObdObject(System.String)">
            <summary>
            GetObdObject
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="finalize"></param>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.SearchParameter(System.String)">
            <summary>
            Search parameter by parameter uniqueId
            </summary>
            <param name="uniqueId">parameter uniqueId</param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.SearchParameter(System.UInt16,System.Byte)">
            <summary>
            Search parameter by parameter index and subindex
            </summary>
            <param name="index">parameter index</param>
            <param name="subIndex">parameter subindex</param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.UserAgent.Vcs.DeviceVcs.WriteParameter(EltraCommon.ObjectDictionary.Common.DeviceDescription.Profiles.Application.Parameters.Parameter)">
            <summary>
            WriteParameter
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:EltraConnector.Classes.ExecuteResult">
            <summary>
            {ExecuteResult} class - result of command execution
            </summary>
        </member>
        <member name="P:EltraConnector.Classes.ExecuteResult.Result">
            <summary>
            execution result
            </summary>
        </member>
        <member name="P:EltraConnector.Classes.ExecuteResult.ErrorCode">
            <summary>
            device error code
            </summary>
        </member>
        <member name="P:EltraConnector.Classes.ExecuteResult.Parameters">
            <summary>
            List of command {DeviceCommandParameter}
            </summary>
        </member>
        <member name="M:EltraConnector.Classes.ExecuteResult.GetParameterValue``1(System.String,``0@)">
            <summary>
            GetParameterValue - get parameter value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameterName">parameter name</param>
            <param name="parameterValue">parameter value</param>
            <returns></returns>
        </member>
        <member name="T:EltraConnector.Controllers.Events.ParameterUpdateEventArgs">
            <summary>
            ParameterUpdateEventArgs
            </summary>
        </member>
        <member name="P:EltraConnector.Controllers.Events.ParameterUpdateEventArgs.Device">
            <summary>
            Device
            </summary>
        </member>
        <member name="P:EltraConnector.Controllers.Events.ParameterUpdateEventArgs.Result">
            <summary>
            Update Result
            </summary>
        </member>
        <member name="T:EltraConnector.Events.RegistrationState">
            <summary>
            RegistrationState
            </summary>
        </member>
        <member name="F:EltraConnector.Events.RegistrationState.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:EltraConnector.Events.RegistrationState.Registered">
            <summary>
            Registered
            </summary>
        </member>
        <member name="F:EltraConnector.Events.RegistrationState.Unregistered">
            <summary>
            Unregistered
            </summary>
        </member>
        <member name="F:EltraConnector.Events.RegistrationState.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:EltraConnector.Events.ChannelRegistrationEventArgs">
            <summary>
            ChannelRegistrationEventArgs
            </summary>
        </member>
        <member name="P:EltraConnector.Events.ChannelRegistrationEventArgs.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="P:EltraConnector.Events.ChannelRegistrationEventArgs.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:EltraConnector.Events.ChannelRegistrationEventArgs.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="T:EltraConnector.Events.SignInRequestEventArgs">
            <summary>
            SignInRequestEventArgs
            </summary>
        </member>
        <member name="T:EltraConnector.Master.Definitions.MasterStatus">
            <summary>
            MasterStatus
            </summary>
        </member>
        <member name="F:EltraConnector.Master.Definitions.MasterStatus.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:EltraConnector.Master.Definitions.MasterStatus.Starting">
            <summary>
            Starting
            </summary>
        </member>
        <member name="F:EltraConnector.Master.Definitions.MasterStatus.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:EltraConnector.Master.Definitions.MasterStatus.Stopping">
            <summary>
            Stopping
            </summary>
        </member>
        <member name="F:EltraConnector.Master.Definitions.MasterStatus.Stopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="T:EltraConnector.Master.Device.Connection.ConnectionSettings">
            <summary>
            ConnectionSettings
            </summary>
        </member>
        <member name="M:EltraConnector.Master.Device.Connection.ConnectionSettings.#ctor">
            <summary>
            ConnectionSettings
            </summary>
        </member>
        <member name="P:EltraConnector.Master.Device.Connection.ConnectionSettings.UpdateInterval">
            <summary>
            UpdateInterval
            </summary>
        </member>
        <member name="P:EltraConnector.Master.Device.Connection.ConnectionSettings.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="T:EltraConnector.Master.Device.MasterVcs">
            <summary>
            MasterVcs
            </summary>
        </member>
        <member name="M:EltraConnector.Master.Device.MasterVcs.#ctor(EltraConnector.Master.Device.MasterDevice,System.UInt32,System.UInt32)">
            <summary>
            MasterVcs
            </summary>
            <param name="device"></param>
            <param name="updateInterval"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:EltraConnector.Master.Device.MasterVcs.#ctor(EltraConnector.SyncAgent.SyncCloudAgent,EltraCommon.Contracts.Devices.EltraDevice,System.UInt32,System.UInt32)">
            <summary>
            MasterVcs
            </summary>
            <param name="masterAgent"></param>
            <param name="device"></param>
            <param name="updateInterval"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:EltraConnector.Master.Device.MasterVcs.#ctor(EltraConnector.Master.Device.MasterDevice)">
            <summary>
            MasterVcs
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:EltraConnector.Master.EltraMasterConnector">
            <summary>
            EltraMasterConnector
            </summary>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.#ctor">
            <summary>
            EltraMasterConnector
            </summary>
        </member>
        <member name="P:EltraConnector.Master.EltraMasterConnector.Identity">
            <summary>
            Authorization data
            </summary>
        </member>
        <member name="P:EltraConnector.Master.EltraMasterConnector.Host">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:EltraConnector.Master.EltraMasterConnector.ConnectionSettings">
            <summary>
            ConnectionSettings
            </summary>
        </member>
        <member name="P:EltraConnector.Master.EltraMasterConnector.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:EltraConnector.Master.EltraMasterConnector.Authentication">
            <summary>
            Authentication
            </summary>
        </member>
        <member name="E:EltraConnector.Master.EltraMasterConnector.StatusChanged">
            <summary>
            Agent status changed
            </summary>
        </member>
        <member name="E:EltraConnector.Master.EltraMasterConnector.RemoteChannelStatusChanged">
            <summary>
            Remote (device) channel status changed
            </summary>
        </member>
        <member name="E:EltraConnector.Master.EltraMasterConnector.ChannelStatusChanged">
            <summary>
            Channel status changed
            </summary>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.OnStatusChanged">
            <summary>
            OnStatusChanged
            </summary>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.OnStatusChanged(EltraConnector.Master.Events.MasterStatusEventArgs)">
            <summary>
            OnStatusChanged
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.SignIn(EltraCommon.Contracts.Users.UserIdentity,System.Boolean)">
            <summary>
            Sign in user
            </summary>
            <param name="identity">User identity</param>
            <param name="createAccount"></param>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.SignOut">
            <summary>
            Sign out agent user
            </summary>
            <returns>true on success</returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.CreateAlias(System.String)">
            <summary>
            Create unique device user alias.
            </summary>
            <param name="role">User role</param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.CreateAlias(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Create user-defined alias
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.Start(EltraConnector.Master.Device.MasterDeviceManager)">
            <summary>
            Start async connector
            </summary>
            <param name="deviceManager"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.Stop">
            <summary>
            Stop connector
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.StartService(System.String,EltraConnector.Master.Device.MasterDeviceManager)">
            <summary>
            Start connector as service
            </summary>
            <param name="appName"></param>
            <param name="deviceManager"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.StopService(System.String)">
            <summary>
            Stop running service
            </summary>
            <param name="appName"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:EltraConnector.Master.EltraMasterConnector.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:EltraConnector.Master.Events.MasterStatusEventArgs">
            <summary>
            MasterStatusEventArgs
            </summary>
        </member>
        <member name="P:EltraConnector.Master.Events.MasterStatusEventArgs.Status">
            <summary>
            Master status
            </summary>
        </member>
        <member name="T:EltraConnector.SyncAgent.Authentication">
            <summary>
            Authentication
            </summary>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.#ctor(System.String)">
            <summary>
            Authentication
            </summary>
            <param name="url"></param>
        </member>
        <member name="P:EltraConnector.SyncAgent.Authentication.Good">
            <summary>
            Good
            </summary>
        </member>
        <member name="E:EltraConnector.SyncAgent.Authentication.GoodChanged">
            <summary>
            Good flag changed
            </summary>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.SignIn(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Sign-in
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.SignOut">
            <summary>
            Sign-out
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.SignOff">
            <summary>
            Sign-off
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.SignUp(EltraCommon.Contracts.Users.UserIdentity)">
            <summary>
            Sign-up
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.SyncAgent.Authentication.Stop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="T:EltraConnector.Transport.Ws.Events.WsMessageType">
            <summary>
            WsMessageType
            </summary>
        </member>
        <member name="F:EltraConnector.Transport.Ws.Events.WsMessageType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:EltraConnector.Transport.Ws.Events.WsMessageType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:EltraConnector.Transport.Ws.Events.WsMessageType.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:EltraConnector.Transport.Ws.Events.WsMessageType.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:EltraConnector.Transport.Ws.Events.WsMessageType.WsMessage">
            <summary>
            WsMessage
            </summary>
        </member>
        <member name="T:EltraConnector.Transport.Ws.Events.WsConnectionMessageEventArgs">
            <summary>
            WsConnectionMessageEventArgs
            </summary>
        </member>
        <member name="P:EltraConnector.Transport.Ws.Events.WsConnectionMessageEventArgs.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:EltraConnector.Transport.Ws.Events.WsConnectionMessageEventArgs.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:EltraConnector.Transport.Ws.Events.WsConnectionMessageEventArgs.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:EltraConnector.Transport.Ws.WsConnectionManager">
            <summary>
            WsConnectionManager
            </summary>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.#ctor">
            <summary>
            WsConnectionManager
            </summary>
        </member>
        <member name="P:EltraConnector.Transport.Ws.WsConnectionManager.HostUrl">
            <summary>
            HostUrl
            </summary>
        </member>
        <member name="E:EltraConnector.Transport.Ws.WsConnectionManager.MessageReceived">
            <summary>
            MessageReceived
            </summary>
        </member>
        <member name="E:EltraConnector.Transport.Ws.WsConnectionManager.MessageSent">
            <summary>
            MessageSent
            </summary>
        </member>
        <member name="E:EltraConnector.Transport.Ws.WsConnectionManager.ErrorOccured">
            <summary>
            ErrorOccured
            </summary>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Connect(System.String,System.String)">
            <summary>
            Connect
            </summary>
            <param name="uniqueId"></param>
            <param name="channelName"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.IsConnected(System.String)">
            <summary>
            IsConnected
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.CanConnect(System.String)">
            <summary>
            CanConnect
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.IsDisconnecting(System.String)">
            <summary>
            IsDisconnecting
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Disconnect(System.String)">
            <summary>
            Disconnect
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.DisconnectAll">
            <summary>
            DisconnectAll
            </summary>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Send``1(System.String,EltraCommon.Contracts.Users.UserIdentity,``0)">
            <summary>
            Send
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uniqueId"></param>
            <param name="identity"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Receive(System.String)">
            <summary>
            Receive
            </summary>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Receive``1(System.String)">
            <summary>
            Receive
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uniqueId"></param>
            <returns></returns>
        </member>
        <member name="M:EltraConnector.Transport.Ws.WsConnectionManager.Send(System.String,EltraCommon.Contracts.Users.UserIdentity,System.String,System.String)">
            <summary>
            Send
            </summary>
            <param name="uniqueId"></param>
            <param name="identity"></param>
            <param name="typeName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:AgentStatusEventArgs">
            <summary>
            AgentStatusEventArgs - Agent status event arguments
            </summary>
        </member>
        <member name="P:AgentStatusEventArgs.Status">
            <summary>
            {AgentStatus} - agent status
            </summary>
        </member>
        <member name="T:EltraMaster.DeviceManager.Events.DeviceCommunicationEventArgs">
            <summary>
            {DeviceCommunicationEventArgs} - device communication event arguments
            </summary>
        </member>
        <member name="P:EltraMaster.DeviceManager.Events.DeviceCommunicationEventArgs.Device">
            <summary>
            {MasterDevice} Device instance
            </summary>
        </member>
        <member name="P:EltraMaster.DeviceManager.Events.DeviceCommunicationEventArgs.LastErrorCode">
            <summary>
            LastErrorCode - device error code
            </summary>
        </member>
    </members>
</doc>
